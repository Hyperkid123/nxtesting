name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v3      
      - name: Install deps
        run: npm ci
      # cache node modules for all jobs to use
      - uses: actions/cache@v3
        id: node_modules-cache
        with:
          path: | 
            **/node_modules
          key: install-cache-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  lint:
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v3
      - uses: actions/cache@v3
        id: node_modules-cache
        with:
          path: "**/node_modules"
          key: install-cache-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install deps
        run: npm i
      - name: Lint affected
        run: npx nx affected -t lint
  test:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v3
      - uses: actions/cache@v3
        id: node_modules-cache
        with:
          path: "**/node_modules"
          key: install-cache-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install deps
        run: npm i
      - name: Test affected
        run: npx nx affected -t test --configuration=ci
  build:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v3
      - uses: actions/cache@v3
        id: node_modules-cache
        with:
          path: "**/node_modules"
          key: install-cache-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install deps
        run: npm i
      - name: Build affected
        run: npx nx affected -t build
  release:
    runs-on: ubuntu-latest
    needs: [install, lint, test, build]
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: actions/cache@v3
        id: node_modules-cache
        with:
          path: "**/node_modules"
          key: install-cache-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install deps
        run: npm i
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - name: Build
        run: npx nx run-many -t build
      - name: Set publish config
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        shell: bash
        run: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
      - name: Version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx nx affected --base=last-release --parallel=1 --target=version --postTargets=syncDependencies,npm,github --trackDeps
      - name: Tag last-release
        shell: bash
        run: |
          git tag -f last-release
          git push origin last-release --force
